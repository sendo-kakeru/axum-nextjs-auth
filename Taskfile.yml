version: "3"

tasks:
  # ------------------------
  # DEVELOPMENT
  # ------------------------

  dev:
    desc: Start dev server
    deps:
      - task: dev:server
      - task: dev:front

  dev:server:
    desc: Start backend dev server
    dir: server
    cmds:
      - cargo run --bin main

  dev:front:
    desc: Start frontend dev server
    dir: front
    cmds:
      - npm run dev

  docker-rebuild:
    desc: Full Docker rebuild
    cmds:
      - docker-compose down --volumes --remove-orphans
      - docker image prune -af
      - docker volume prune -f
      - docker-compose build --no-cache
      - docker-compose up -d
      - task: migrate
      - task: migrate-test-db

  # ------------------------
  # MAIN DB
  # ------------------------

  drop-db:
    desc: Drop all tables from dev DB
    cmds:
      - docker-compose exec -T postgres psql -U local -d local -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

  migrate:
    desc: Run dev database migrations
    dir: server
    cmds:
      - cargo sqlx migrate run

  reset-db:
    desc: Reset dev database and run migrations
    cmds:
      - task: drop-db
      - task: migrate

  psql:
    desc: Connect to the main PostgreSQL container via bash
    cmds:
      - docker-compose exec postgres bash

  # ------------------------
  # TEST DB
  # ------------------------

  drop-test-db:
    desc: Drop all tables from test DB
    cmds:
      - docker-compose exec -T test-postgres psql -U test -d test -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

  migrate-test-db:
    desc: Run migrations on test DB
    dir: server
    env:
      DATABASE_URL: postgres://test:test@localhost:5434/test
    cmds:
      - cargo sqlx migrate run

  reset-test-db:
    desc: Reset test DB and run migrations
    cmds:
      - task: drop-test-db
      - task: migrate-test-db

  # ------------------------
  # TEST
  # ------------------------

  test:
    desc: Run tests
    deps:
      - task: test:server
      - task: test:front

  test:server:
    desc: Run server tests
    deps: [reset-test-db]
    dir: server
    cmds:
      - cargo nextest run --workspace

  test:front:
    desc: Run front tests
    dir: front
    cmds:
      - npm run lint
      - npm run type-check
      - npm run test
